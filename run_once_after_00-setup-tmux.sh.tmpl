#!/bin/bash

# Exit on error, undefined variable, or pipeline failure
set -euo pipefail

# Function to check if TPM is installed
is_tpm_installed() {
    [[ -e "$TMUX_CONF_DIR/plugins/tpm" ]]
}

# Function to prompt the user for reinstallation
prompt_reinstall() {
    local response
    read -p "TPM seems to be already installed. Do you want to reinstall? [y/N]: " -n 1 response
    echo
    [[ "$response" =~ ^[yY]$ ]]
}

# Function to install TPM
install_tpm() {
    echo "Installing TPM..."
    git clone https://github.com/tmux-plugins/tpm "$TMUX_CONF_DIR/plugins/tpm"
    
    # Modified part: Install plugins manually
    echo "Installing plugins..."
    bash "$TMUX_CONF_DIR/plugins/tpm/scripts/install_plugins.sh" || {
        echo "Failed to install plugins automatically. Please install manually by pressing prefix + I in a tmux session."
    }
}

# Main script execution
TMUX_CONF_DIR="$HOME/.tmux"

if is_tpm_installed; then
    if prompt_reinstall; then
        rm -rf "$TMUX_CONF_DIR/plugins"
        install_tpm
    else
        echo "Skipping TPM reinstallation."
    fi
else
    install_tpm
fi

# Remind user to reload tmux if it's running
if [ -n "${TMUX:-}" ]; then
    echo "Please reload tmux for changes to take effect. Run 'tmux source ~/.tmux.conf' in your tmux session."
fi
